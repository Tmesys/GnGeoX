################################################################################
#
# GNGEO Configuration file
#
################################################################################

[path]
# Where your roms are?
rompath=./roms
# Where did you put yout neogeo.zip bios file?
biospath=./bios
# Where gngeo can find shader files for glsl blitter?
shaderpath=./shaders
# Where gngeo can find transpack files?
#	Transparency pack have been introduced with Nebula and Kawaks.
#	This is basicly a file that define which sprite should be draw with
#	transparency. For example, explosion in Blazing Star or special effect
#	move in King Of Fighters.
#	You can find some pack in the nebula distribution (they have .bld extension)
transpackpath=./transpack
# Where nvram are?
nvrampath=./nvram
# Where saves are?
savespath=./saves

[graphics]
# Which blitter? 'gngeo --blitter help' for a list. Possible values are : "soft "/ "opengl"
blitter=opengl
# Play in fullscreen? Possible values are : "0" for false / "1" for true
fullscreen=0
# Which effect? 'gngeo --effect help' for a list. Possible values are : "none" / "scanline" / "scanline50" / "scale2x" / "scale3x" / "scale4x" / "scale2x50" / "scale2x75" / "hq2x" / "lq2x" / "hq3x" / "lq3x" / "doublex"
effect=none
# Scale the output image 
scale=2
# Have interpolation? Possible values are : "0" for false / "1" for true
#	Since NeoGeo hardware lack transparency support, programmers generally
#	use blinking sprite to simulate it. By interpolating the current frame
#	with the last one, sprite doesn't blink anymore and become transparent.
interpolation=0
# Shown FPS?  Possible values are : "0" for false / "1" for true
showfps=0
# autoframeskip control? Possible values are : "0" for false / "1" for true
autoframeskip=1
# Synchronize the display with VBLANK (you may deactivate autoframeskip if vsync is on, only for software blitter)? Possible values are : "0" for false / "1" for true
vsync=0

[system]
# Enable the raster interrupt? Possible values are : "0" for false / "1" for true
#	It's a special effect often use to simulate perspective 
#	(for ex. in SuperSideKick  II,III and IV) or wave effect (Samy logo in
#	Viewpoint or The fire stage in LastBlade2). Such effect need the
#	emulation of HBlank interrupt, and thus, need a little more CPU power.
#	Since this effect is use only by some game, raster effect are not 
#	enable by default.
raster=1
# Use PAL timing (buggy)? Possible values are : "0" for false / "1" for true
pal=0
# Country? Possible values are (not used when system type is "home or "unibios") : 
# "0" for "japan"
# "1" for "europe"
# "2" for "usa" 
# "3" for "asia" 
country=1
# System type? Possible values are :
# "0" for "arcade" Multi Video System (MVS)
# "1" for "home" Advanced Entertainment System (AES)
# "2" for "unibios"
type=2
# Sample rate
samplerate=22050
# Enable the 68k inline debuger (disables the sound)? Possible values are : "0" for false / "1" for true
debug=0
# Do a gno dump? Possible values are : "0" for false / "1" for true
dump=0

[input]
# Enable joystick support ? Possible values are : "0" for false / "1" for true
joystick=1
# NeoRageX-style hotkey configuration
# Up to 4 hotkeys per player can be defined (
# Only fire buttons (A-D) can be combined
# A = 1, B = 2, C = 4, D = 8

# Samples:
# Map CD to P1 hotkey 0
# > p1hotkey0 4,8
# Map BC to P1 hotkey 1
# > p1hotkey1 2,4
#Map ABC to P1 hotkey 2
# > p1hotkey2 1,2,4
#p1hotkey3
#p2hotkey0
#p2hotkey1
#p2hotkey2
#p2hotkey3

# Key configuration
# order : A,B,C,D,START,COIN,UP,DOWN,LEFT,RIGHT
# please see SDL_keysym.h for key definition
# or push F4 during game : the keysym code of
# keys will be printed (also work for joysticks) 
# same thing as joypads for hotkeys

# Azerty configuration: 
# p1: w,x,q,s,&,",up,down,left,right
# p2: l,m,o,p,Ã©,',NUM 8,NUM 5,NUM 4,NUM 6
#p1control A=K119,B=K120,C=K113,D=K115,START=K38,COIN=K34,UP=K273,DOWN=K274,LEFT=K276,RIGHT=K275,MENU=K27
#p2control A=K108,B=K109,C=K111,D=K112,START=K233,COIN=K39,UP=K264,DOWN=K261,LEFT=K260,RIGHT=K262,MENU=K27

# Qwerty configuration:
# p1: z,x,a,s,1,3,up,down,left,right
# p2: l,;,o,p,2,4,NUM 8,NUM 5,NUM 4,NUM 6
#p1control A=K122,B=K120,C=K97,D=K115,START=K49,COIN=K51,UP=K273,DOWN=K274,LEFT=K276,RIGHT=K275,MENU=K27
#p2control A=K108,B=K59,C=K111,D=K112,START=K50,COIN=K52,UP=K264,DOWN=K261,LEFT=K260,RIGHT=K262,MENU=K27

# some sample joystick configuration
# Xbox360
# p1control A=J0B0,B=J0B1,C=J0B2,D=J0B3,START=J0B6,COIN=J0B10,UP=J0a1,DOWN=J0a1,LEFT=J0A0,RIGHT=J0A0,MENU=J0B7
# Dualshock2
# > p1control A=J0B2,B=J0B1,C=J0B3,D=J0B0,START=J0B9,COIN=J0B8,UP=J0a1,DOWN=J0a1,LEFT=J0A0,RIGHT=J0A0

# Meaning of the code:
# Kxxx : keyboad key number xxx
# JxByy : Joystick number x Button yy
# JxAyy : Joystick number x Axe yy (use a lowercase 'a' if you need to invert the axis)
# JxHyy : Joystick number x Hat yy
# 
# by the way, you can define a button multiple time, for example A=J0B0,A=K123,etc..

